"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[41951],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(n),u=i,c=m["".concat(p,".").concat(u)]||m[u]||k[u]||r;return n?a.createElement(c,l(l({ref:t},d),{},{components:n})):a.createElement(c,l({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5694:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return u},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return k}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),l=["components"],o={id:"actions_BringMoveSwap.internal.Range",title:"Class: Range",sidebar_label:"Range",custom_edit_url:null},p=void 0,s={unversionedId:"contributing/api/classes/actions_BringMoveSwap.internal.Range",id:"contributing/api/classes/actions_BringMoveSwap.internal.Range",title:"Class: Range",description:"actions/BringMoveSwap.internal.Range",source:"@site/../docs/contributing/api/classes/actions_BringMoveSwap.internal.Range.md",sourceDirName:"contributing/api/classes",slug:"/contributing/api/classes/actions_BringMoveSwap.internal.Range",permalink:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range",editUrl:null,tags:[],version:"current",frontMatter:{id:"actions_BringMoveSwap.internal.Range",title:"Class: Range",sidebar_label:"Range",custom_edit_url:null},sidebar:"contributing",previous:{title:"Position",permalink:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position"},next:{title:"Selection",permalink:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Selection"}},d={},k=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"Properties",id:"properties",level:2},{value:"end",id:"end",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"isEmpty",id:"isempty",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"isSingleLine",id:"issingleline",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"start",id:"start",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"Methods",id:"methods",level:2},{value:"contains",id:"contains",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"intersection",id:"intersection",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"isEqual",id:"isequal",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"union",id:"union",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"with",id:"with",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-11",level:4}],m={toc:k};function u(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/actions_BringMoveSwap"},"actions/BringMoveSwap"),".",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/namespaces/actions_BringMoveSwap.internal"},"internal"),".Range"),(0,r.kt)("p",null,"A range represents an ordered pair of two positions.\nIt is guaranteed that ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range#start"},"start"),".isBeforeOrEqual(",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range#end"},"end"),")"),(0,r.kt)("p",null,"Range objects are ",(0,r.kt)("strong",{parentName:"p"},"immutable"),". Use the ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range#with"},"with"),",\n",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range#intersection"},"intersection"),", or ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range#union"},"union")," methods\nto derive new ranges from an existing range."),(0,r.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Range"))),(0,r.kt)("p",{parentName:"li"},"\u21b3 ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Selection"},(0,r.kt)("inlineCode",{parentName:"a"},"Selection"))))),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new Range"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"start"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"end"),")"),(0,r.kt)("p",null,"Create a new range from two positions. If ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," is not\nbefore or equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"end"),", the values will be swapped."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"start")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position"},(0,r.kt)("inlineCode",{parentName:"a"},"Position"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"end")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position"},(0,r.kt)("inlineCode",{parentName:"a"},"Position"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A position.")))),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"node_modules/@types/vscode/index.d.ts:401"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new Range"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"startLine"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"startCharacter"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"endLine"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"endCharacter"),")"),(0,r.kt)("p",null,"Create a new range from number coordinates. It is a shorter equivalent of\nusing ",(0,r.kt)("inlineCode",{parentName:"p"},"new Range(new Position(startLine, startCharacter), new Position(endLine, endCharacter))")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"startLine")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A zero-based line value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"startCharacter")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A zero-based character value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"endLine")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A zero-based line value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"endCharacter")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A zero-based character value.")))),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"node_modules/@types/vscode/index.d.ts:412"),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"end"},"end"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"end"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position"},(0,r.kt)("inlineCode",{parentName:"a"},"Position"))),(0,r.kt)("p",null,"The end position. It is after or equal to ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range#start"},"start"),"."),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"node_modules/@types/vscode/index.d.ts:392"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isempty"},"isEmpty"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"isEmpty"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"true")," if ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"end")," are equal."),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"node_modules/@types/vscode/index.d.ts:417"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"issingleline"},"isSingleLine"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"isSingleLine"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"true")," if ",(0,r.kt)("inlineCode",{parentName:"p"},"start.line")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"end.line")," are equal."),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"node_modules/@types/vscode/index.d.ts:422"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"start"},"start"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"start"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position"},(0,r.kt)("inlineCode",{parentName:"a"},"Position"))),(0,r.kt)("p",null,"The start position. It is before or equal to ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range#end"},"end"),"."),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"node_modules/@types/vscode/index.d.ts:387"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"contains"},"contains"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"contains"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"positionOrRange"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Check if a position or a range is contained in this range."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"positionOrRange")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,r.kt)("inlineCode",{parentName:"a"},"Range"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position"},(0,r.kt)("inlineCode",{parentName:"a"},"Position"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A position or a range.")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"true")," if the position or range is inside or equal\nto this range."),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,"node_modules/@types/vscode/index.d.ts:431"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"intersection"},"intersection"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"intersection"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"range"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,r.kt)("inlineCode",{parentName:"a"},"Range"))),(0,r.kt)("p",null,"Intersect ",(0,r.kt)("inlineCode",{parentName:"p"},"range")," with this range and returns a new range or ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),"\nif the ranges have no overlap."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"range")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,r.kt)("inlineCode",{parentName:"a"},"Range"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A range.")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,r.kt)("inlineCode",{parentName:"a"},"Range"))),(0,r.kt)("p",null,"A range of the greater start and smaller end positions. Will\nreturn undefined when there is no overlap."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,"node_modules/@types/vscode/index.d.ts:450"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isequal"},"isEqual"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"isEqual"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"other"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Check if ",(0,r.kt)("inlineCode",{parentName:"p"},"other")," equals this range."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"other")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,r.kt)("inlineCode",{parentName:"a"},"Range"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A range.")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"true")," when start and end are ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position#isequal"},"equal")," to\nstart and end of this range."),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,"node_modules/@types/vscode/index.d.ts:440"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"union"},"union"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"union"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"other"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,r.kt)("inlineCode",{parentName:"a"},"Range"))),(0,r.kt)("p",null,"Compute the union of ",(0,r.kt)("inlineCode",{parentName:"p"},"other")," with this range."),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"other")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,r.kt)("inlineCode",{parentName:"a"},"Range"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A range.")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,r.kt)("inlineCode",{parentName:"a"},"Range"))),(0,r.kt)("p",null,"A range of smaller start position and the greater end position."),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,"node_modules/@types/vscode/index.d.ts:458"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"with"},"with"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"with"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"start?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"end?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,r.kt)("inlineCode",{parentName:"a"},"Range"))),(0,r.kt)("p",null,"Derived a new range from this range."),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"start?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position"},(0,r.kt)("inlineCode",{parentName:"a"},"Position"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A position that should be used as start. The default value is the ",(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range#start"},"current start"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"end?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position"},(0,r.kt)("inlineCode",{parentName:"a"},"Position"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A position that should be used as end. The default value is the ",(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range#end"},"current end"),".")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,r.kt)("inlineCode",{parentName:"a"},"Range"))),(0,r.kt)("p",null,"A range derived from this range with the given start and end position.\nIf start and end are not different ",(0,r.kt)("inlineCode",{parentName:"p"},"this")," range will be returned."),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,"node_modules/@types/vscode/index.d.ts:468"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"with"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"change"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,r.kt)("inlineCode",{parentName:"a"},"Range"))),(0,r.kt)("p",null,"Derived a new range from this range."),(0,r.kt)("h4",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"change")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An object that describes a change to this range.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"change.end?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position"},(0,r.kt)("inlineCode",{parentName:"a"},"Position"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"change.start?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position"},(0,r.kt)("inlineCode",{parentName:"a"},"Position"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,r.kt)("inlineCode",{parentName:"a"},"Range"))),(0,r.kt)("p",null,"A range that reflects the given change. Will return ",(0,r.kt)("inlineCode",{parentName:"p"},"this")," range if the change\nis not changing anything."),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,"node_modules/@types/vscode/index.d.ts:477"))}u.isMDXComponent=!0}}]);