"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[71677],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),o=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=o(n),c=i,k=d["".concat(s,".").concat(c)]||d[c]||m[c]||r;return n?a.createElement(k,p(p({ref:t},u),{},{components:n})):a.createElement(k,p({ref:t},u))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,p=new Array(r);p[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,p[1]=l;for(var o=2;o<r;o++)p[o]=n[o];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},13323:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return m}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),p=["components"],l={},s="Snippets",o={unversionedId:"user/experimental/snippets",id:"user/experimental/snippets",title:"Snippets",description:"Wrapper snippet demo",source:"@site/../docs/user/experimental/snippets.md",sourceDirName:"user/experimental",slug:"/user/experimental/snippets",permalink:"/docs/user/experimental/snippets",editUrl:"https://github.com/cursorless-dev/cursorless/edit/main/docs/../docs/user/experimental/snippets.md",tags:[],version:"current",frontMatter:{},sidebar:"user",previous:{title:"Cursorless snippet format",permalink:"/docs/user/experimental/snippet-format"},next:{title:"Installation",permalink:"/docs/user/installation"}},u={},m=[{value:"Enabling snippets",id:"enabling-snippets",level:2},{value:"Using snippets",id:"using-snippets",level:2},{value:"Wrapping a target with snippets",id:"wrapping-a-target-with-snippets",level:3},{value:"Command syntax",id:"command-syntax",level:4},{value:"Examples",id:"examples",level:4},{value:"Default scope types",id:"default-scope-types",level:4},{value:"Built-in wrapper snippets",id:"built-in-wrapper-snippets",level:3},{value:"Inserting a snippet",id:"inserting-a-snippet",level:3},{value:"Command syntax",id:"command-syntax-1",level:4},{value:"Built-in insertion snippets",id:"built-in-insertion-snippets",level:3},{value:"Customizing spoken forms",id:"customizing-spoken-forms",level:2},{value:"Adding your own snippets",id:"adding-your-own-snippets",level:2},{value:"Define snippets in vscode",id:"define-snippets-in-vscode",level:3},{value:"2. Add snippet to spoken forms csvs",id:"2-add-snippet-to-spoken-forms-csvs",level:3},{value:"For wrapping",id:"for-wrapping",level:4},{value:"For insertion",id:"for-insertion",level:4},{value:"Customizing built-in snippets",id:"customizing-built-in-snippets",level:2}],d={toc:m};function c(e){var t=e.components,l=(0,i.Z)(e,p);return(0,r.kt)("wrapper",(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"snippets"},"Snippets"),(0,r.kt)("p",null,(0,r.kt)("img",{loading:"lazy",alt:"Wrapper snippet demo",src:n(11787).Z,width:"1195",height:"588"}),"\n",(0,r.kt)("img",{loading:"lazy",alt:"Link wrap",src:n(10677).Z,width:"1015",height:"730"})),(0,r.kt)("p",null,"Cursorless has its own experimental snippet engine that allows you to both insert snippets and wrap targets with snippets. Cursorless ships with a few built-in snippets, but users can also use their own snippets."),(0,r.kt)("h2",{id:"enabling-snippets"},"Enabling snippets"),(0,r.kt)("p",null,"Add the following line to the end of your ",(0,r.kt)("inlineCode",{parentName:"p"},"settings.talon")," (or any other ",(0,r.kt)("inlineCode",{parentName:"p"},".talon")," file that will be active when vscode is focused):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"tag(): user.cursorless_experimental_snippets\n")),(0,r.kt)("h2",{id:"using-snippets"},"Using snippets"),(0,r.kt)("h3",{id:"wrapping-a-target-with-snippets"},"Wrapping a target with snippets"),(0,r.kt)("h4",{id:"command-syntax"},"Command syntax"),(0,r.kt)("p",null,"The command syntax is as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"<snippet_name> wrap <target>"\n')),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"try wrap air"'),": Wrap the statement containing the marked ",(0,r.kt)("inlineCode",{parentName:"li"},"a")," in a try-catch statement"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"try wrap air past bat"'),": Wrap the sequence of statements from the marked ",(0,r.kt)("inlineCode",{parentName:"li"},"a")," to the marked ",(0,r.kt)("inlineCode",{parentName:"li"},"b")," in a try-catch statement")),(0,r.kt)("h4",{id:"default-scope-types"},"Default scope types"),(0,r.kt)("p",null,"Each snippet wrapper has a default scope type. When you refer to a target, by default it will expand to the given scope type. This way, for example, when you say ",(0,r.kt)("inlineCode",{parentName:"p"},'"try wrap air"'),", it will refer to the statement containing ",(0,r.kt)("inlineCode",{parentName:"p"},"a")," rather than just the token."),(0,r.kt)("h3",{id:"built-in-wrapper-snippets"},"Built-in wrapper snippets"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Default spoken form"),(0,r.kt)("th",{parentName:"tr",align:null},"Snippet"),(0,r.kt)("th",{parentName:"tr",align:null},"Default target scope type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"if wrap"')),(0,r.kt)("td",{parentName:"tr",align:null},"If statement"),(0,r.kt)("td",{parentName:"tr",align:null},"Statement")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"else wrap"')),(0,r.kt)("td",{parentName:"tr",align:null},"If-else statement; target goes in else branch"),(0,r.kt)("td",{parentName:"tr",align:null},"Statement")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"if else wrap"')),(0,r.kt)("td",{parentName:"tr",align:null},"If-else statement; target goes in if branch"),(0,r.kt)("td",{parentName:"tr",align:null},"Statement")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"try wrap"')),(0,r.kt)("td",{parentName:"tr",align:null},"Try-catch statement"),(0,r.kt)("td",{parentName:"tr",align:null},"Statement")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"link wrap"')),(0,r.kt)("td",{parentName:"tr",align:null},"Markdown link"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"funk wrap"')),(0,r.kt)("td",{parentName:"tr",align:null},"Function"),(0,r.kt)("td",{parentName:"tr",align:null},"Statement")))),(0,r.kt)("h3",{id:"inserting-a-snippet"},"Inserting a snippet"),(0,r.kt)("p",null,"The same snippet definitions that allow for wrapping targets can also be used for insertion. You can either insert a snippet at the current cursor position, or use a positional target to insert before / after / replace something."),(0,r.kt)("h4",{id:"command-syntax-1"},"Command syntax"),(0,r.kt)("p",null,"The command syntax options are as follows. In its simplest form, you can just say"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"snippet <snippet_name>"\n')),(0,r.kt)("p",null,"This command will insert a snippet at the current position. For example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"snippet funk"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"snippet if"'))),(0,r.kt)("p",null,"For some snippets, you can include a phrase, that will automatically fill a particular snippet variable with the given phrase, formatted properly:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"snippet <snippet_name> <phrase>"\n')),(0,r.kt)("p",null,"For example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"snippet funk hello world"'),": Insert function with name ",(0,r.kt)("inlineCode",{parentName:"li"},"helloWorld"))),(0,r.kt)("p",null,"Finally, we support inserting a snippet onto, before or after a Cursorless target:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"snippet <snippet_name> before <target>"\n"snippet <snippet_name> after <target>"\n"snippet <snippet_name> to <target>"\n')),(0,r.kt)("p",null,"For example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"snippet if after air"'),": Insert ",(0,r.kt)("inlineCode",{parentName:"li"},"if")," statement after the statement with a hat over the ",(0,r.kt)("inlineCode",{parentName:"li"},"a"))),(0,r.kt)("p",null,"Note that each snippet can use ",(0,r.kt)("inlineCode",{parentName:"p"},"insertionScopeTypes")," to indicate that it will auto-expand the target. So, for example, ",(0,r.kt)("inlineCode",{parentName:"p"},'"snip if after this"')," will insert an ",(0,r.kt)("inlineCode",{parentName:"p"},"if")," statement after the current statement."),(0,r.kt)("h3",{id:"built-in-insertion-snippets"},"Built-in insertion snippets"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Default spoken form"),(0,r.kt)("th",{parentName:"tr",align:null},"Snippet"),(0,r.kt)("th",{parentName:"tr",align:null},"Default insertion scope type"),(0,r.kt)("th",{parentName:"tr",align:null},"Accepts optional phrase?"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"snippet if"')),(0,r.kt)("td",{parentName:"tr",align:null},"If statement"),(0,r.kt)("td",{parentName:"tr",align:null},"Statement"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"snippet if else"')),(0,r.kt)("td",{parentName:"tr",align:null},"If-else statement"),(0,r.kt)("td",{parentName:"tr",align:null},"Statement"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"snippet try"')),(0,r.kt)("td",{parentName:"tr",align:null},"Try-catch statement"),(0,r.kt)("td",{parentName:"tr",align:null},"Statement"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"snippet funk"')),(0,r.kt)("td",{parentName:"tr",align:null},"Function; phrase becomes name"),(0,r.kt)("td",{parentName:"tr",align:null},"Function"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"snippet link"')),(0,r.kt)("td",{parentName:"tr",align:null},"Markdown link; phrase becomes link text"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705")))),(0,r.kt)("h2",{id:"customizing-spoken-forms"},"Customizing spoken forms"),(0,r.kt)("p",null,"As usual, the spoken forms for these snippets can be ",(0,r.kt)("a",{parentName:"p",href:"/docs/user/customization"},"customized by csv"),". The csvs are in the files in ",(0,r.kt)("inlineCode",{parentName:"p"},"cursorless-settings/experimental")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"snippet")," in their name."),(0,r.kt)("h2",{id:"adding-your-own-snippets"},"Adding your own snippets"),(0,r.kt)("p",null,"To define your own wrapper snippets, proceed as follows:"),(0,r.kt)("h3",{id:"define-snippets-in-vscode"},"Define snippets in vscode"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Set the ",(0,r.kt)("inlineCode",{parentName:"li"},"cursorless.experimental.snippetsDir")," setting to a directory in which you'd like to create your snippets."),(0,r.kt)("li",{parentName:"ol"},"Add snippets to the directory in files ending in ",(0,r.kt)("inlineCode",{parentName:"li"},".cursorless-snippets"),". See the ",(0,r.kt)("a",{parentName:"li",href:"/docs/user/experimental/snippet-format"},"documentation")," for the cursorless snippet format.")),(0,r.kt)("h3",{id:"2-add-snippet-to-spoken-forms-csvs"},"2. Add snippet to spoken forms csvs"),(0,r.kt)("p",null,"Snippets can be used for wrapping or insertion or both."),(0,r.kt)("h4",{id:"for-wrapping"},"For wrapping"),(0,r.kt)("p",null,"For each snippet that you'd like to be able to use as a wrapper snippet, add a line to the ",(0,r.kt)("inlineCode",{parentName:"p"},"cursorless-settings/experimental/wrapper_snippets.csv")," csv overrides file. The first column is the desired spoken form, and the second column is of the form ",(0,r.kt)("inlineCode",{parentName:"p"},"<name>.<variable>"),", where ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," is the name of the snippet (ie the key in your snippet json file), and ",(0,r.kt)("inlineCode",{parentName:"p"},"variable")," is one of the placeholder variables in your snippet where the target should go."),(0,r.kt)("h4",{id:"for-insertion"},"For insertion"),(0,r.kt)("p",null,"For each snippet that you'd like to be able to use for insertion, add a line to one of the following files:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"cursorless-settings/experimental/insertion_snippets.csv")," if you ",(0,r.kt)("strong",{parentName:"li"},"don't")," need an optional trailing phrase (eg for ",(0,r.kt)("inlineCode",{parentName:"li"},'"snippet funk hello world"')," to provide a function name). In this case, the first column is the spoken form, and the second column is the snippet name."),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"cursorless-settings/experimental/insertion_snippets_single_phrase.csv")," if you want to be able to include an optional extra phrase. In this csv, the first column is the desired spoken form, and the second column is of the form ",(0,r.kt)("inlineCode",{parentName:"li"},"<name>.<variable>"),", where ",(0,r.kt)("inlineCode",{parentName:"li"},"name")," is the name of the snippet (ie the key in your snippet json file), and ",(0,r.kt)("inlineCode",{parentName:"li"},"variable")," is one of the placeholder variables in your snippet where the extra phrase should go.")),(0,r.kt)("h2",{id:"customizing-built-in-snippets"},"Customizing built-in snippets"),(0,r.kt)("p",null,"To customize a built-in snippet, just define a custom snippet (as above), but\nuse the same name as the cursorless core snippet you'd like to change, and give\ndefinitions along with scopes where you'd like your override to be active. Here\nis an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "tryCatchStatement": {\n    "definitions": [\n      {\n        "scope": {\n          "langIds": [\n            "typescript",\n            "typescriptreact",\n            "javascript",\n            "javascriptreact"\n          ]\n        },\n        "body": ["try {", "\\t$body", "} catch (err) {", "\\t$exceptBody", "}"]\n      }\n    ]\n  }\n}\n')),(0,r.kt)("p",null,"The above will change the definition of the try-catch statement in typescript."))}c.isMDXComponent=!0},10677:function(e,t,n){t.Z=n.p+"assets/images/linkWrap-10bee6f6deb41d4da59955737ce9a44d.gif"},11787:function(e,t,n){t.Z=n.p+"assets/images/tryWrapFine-9655118ff42de230357781ce5691079c.gif"}}]);